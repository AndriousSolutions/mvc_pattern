# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-test"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Use the standard Java Action to setup Java 
      # we want the latest Java 12
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      # Use the community Action to install Flutter
      # we want the stable channel
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      
      # Get flutter packages
      - run: flutter pub get
      
      # Check for any formatting issues in the code.
      - run: flutter format .

      # Analyze our Dart code
      - run: flutter analyze . --preamble --no-fatal-infos --no-fatal-warnings

      # Run our tests
      - run: flutter test --coverage

      # Build an Android APK.
      - run: flutter build apk

      # Finally, upload our generated app-release.apk for our workflow to the artifacts.
      # For this, we will be using actions/upload-artifact.
      - uses: actions/upload-artifact@v1
        with:
          # Name of the command/step.
          name: release-apk
          # Path to the release apk.
          path: build/app/outputs/apk/release/app-release.apk

      # Upload to codecov
      - uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage/lcov.info
